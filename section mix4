// ==UserScript==
// @name          section mix4
// @namespace     http://tampermonkey.net/
// @version       2025.07.23.2
// @description   在页面上下文拦截 AJAX，并通过事件发给脚本处理
// @author        you
// @match         https://ticketmaster.sg/ticket/area/*
// @grant         none
// @run-at        document-start
// @updateURL     https://raw.githubusercontent.com/bfdissfho/My-Script/refs/heads/main/section%20mix4
// @downloadURL   https://raw.githubusercontent.com/bfdissfho/My-Script/refs/heads/main/section%20mix4
// ==/UserScript==

(function() {
    'use strict';

    const promo_code_number = '';

    const want_section = [
        ['field_PB1'],
        ['field_318','field_324'],



        ['field_332','field_331','field_330','field_329','field_328B','field_310B','field_311B','field_312B','field_313','field_314B',],//this

        ['field_332','field_331','field_330','field_329','field_328','field_310','field_311','field_312','field_313','field_314',],
        ['field_320','field_319','field_318','field_322','field_323','field_324',],
        ['field_220B','field_231B','field_222B'],
        ['field_PA5','field_PA3', 'field_PB4','field_PB3','field_PB5','field_PA4', 'field_PA2','field_PB2','field_PB6','field_PA1', 'field_PA6', 'field_PA7', 'field_PA8', 'field_PA9', 'field_PA10', 'field_PB1', 'field_PB7', 'field_PB8', 'field_PB9', 'field_PB10', 'field_PC1', 'field_PC2', 'field_PC3', 'field_PC4', 'field_PC5', 'field_PC6', 'field_PC7', 'field_PC8', 'field_PC9', 'field_PC10', 'field_PD1', 'field_PD2', 'field_PD3', 'field_PD4', 'field_PD5', 'field_PD6', 'field_PD7', 'field_PD8', 'field_PD9', 'field_PD10'],

        ['field_215','field_216','field_217','field_226','field_225','field_227'],//this
        ['field_220B','field_222B',],//this
        ['field_221B','field_219B','field_223B','field_224B','field_218B'],//this
        ['field_210B','field_211B','field_212B','field_213B','field_214B','field_228B','field_229B','field_230B','field_231B',],//this
        ['field_220A','field_222A',],//this
        ['field_221A','field_219A','field_223A','field_224A','field_218A'],//this
        ['field_210A','field_211A','field_212A','field_213A','field_214A','field_228A','field_229A','field_230A','field_231A',],//this




        ['field_PEN_VIP', 'field_PEN_BLINK', 'field_VIP', 'field_VIP_GA'],
        ['field_PA5','field_PA3', 'field_PB4','field_PB3','field_PB5','field_PA4', 'field_PA2','field_PB2','field_PB6','field_PA1', 'field_PA6', 'field_PA7', 'field_PA8', 'field_PA9', 'field_PA10', 'field_PB1', 'field_PB7', 'field_PB8', 'field_PB9', 'field_PB10', 'field_PC1', 'field_PC2', 'field_PC3', 'field_PC4', 'field_PC5', 'field_PC6', 'field_PC7', 'field_PC8', 'field_PC9', 'field_PC10', 'field_PD1', 'field_PD2', 'field_PD3', 'field_PD4', 'field_PD5', 'field_PD6', 'field_PD7', 'field_PD8', 'field_PD9', 'field_PD10'],
        ['field_PEN_GA', 'field_PEN_E','field_GA',],
        ['field_606','field_607','field_645','field_644',],
        ['field_101','field_102','field_103','field_104','field_147','field_148','field_149','field_150',],
        ['field_105','field_106','field_107A','field_107B','field_146','field_145','field_144A','field_144B'],
        ['field_111','field_110','field_109','field_140','field_141','field_142','field_116','field_115','field_114','field_113','field_112','field_135','field_136','field_137','field_137','field_138','field_139','field_636', 'field_637', 'field_638', 'field_639', 'field_640', 'field_641', 'field_642', 'field_643','field_608', 'field_609', 'field_610', 'field_611', 'field_612', 'field_613', 'field_614', 'field_615'],
        ['field_405', 'field_406', 'field_407', 'field_408', 'field_409', 'field_410', 'field_411','field_440', 'field_441', 'field_442', 'field_443', 'field_444', 'field_445', 'field_446',],
        ['field_412','field_413','field_414','field_415','field_436','field_437','field_438','field_439',],


        ['field_332','field_331','field_330','field_329','field_328','field_310','field_311','field_312','field_313','field_314',],
        ['field_320','field_319','field_318','field_322','field_323','field_324',],
        ['field_216','field_217','field_226','field_225',],
        ['field_209','field_233','field_221','field_220','field_222',],
        ['field_214','field_215','field_228','field_227'],
        ['field_223','field_224','field_219','field_218','field_210','field_211','field_212','field_213','field_229','field_230','field_231','field_232',],



        ["field_LS_A","field_LS_B","field_LS_C"],
        ["field_US_A","field_US_B","field_US_C"],
        ["field_C1_A","field_C1_B","field_C1_H","field_C1_F","field_C1_G","field_C1_D","field_C1_E","field_C1_C","field_C2_A","field_C2_K","field_C2_J","field_C2_G","field_C2_H","field_C2_E","field_C2_F","field_C2_C","field_C2_D","field_C2_B"],


        ["field_A_B","field_A_DP","field_B_B","field_B_DP","field_C_B","field_C_DP",],
        ["field_Q","field_S","field_P_A","field_P_B","field_H_B","field_H_A","field_J_B","field_J_A","field_K","field_G","field_U"],
        ["field_V_A","field_V_B","field_L_B","field_L_A","field_M_A","field_M_B","field_N","field_D","field_BOXA","field_E","field_F","field_BOXC","field_R","field_T"],



        ["field_STALLS_C","field_STALLS_B","field_STALLS_A","field_STALLS_D","field_STALLS_E"],
        ["field_BALC2_A","field_BALC2_C","field_BALC2_B","field_BALC2_D","field_BALC1_G","field_BALC1_H","field_BALC1_I","field_BALC1_J","field_BALC1_F","field_BALC1_E","field_BALC1_B","field_BALC1_A","field_BALC1_D","field_BALC1_C",],



        ["field_S_A","field_S_B","field_S_C",],
        ["field_D_C","field_D_B","field_D_A",],
        ["field_UC_B","field_UC_A","field_UC_D","field_UC_C","field_UC_F","field_UC_E",],
    ];


    // ─── 1) 注入到页面上下文的脚本 ─────────────────────
    const pageHook = function() {
        // 绑到 window.fetch
        const origFetch = window.fetch.bind(window);
        window.fetch = async function(input, init) {
            const resp = await origFetch(input, init);
            if (typeof input === 'string' && input.includes('/ticket/get-area-map/')) {
                // 只对目标接口做 JSON 解析
                try {
                    const json = await resp.clone().json();
                    const areaArray = Object.values(json).map(a => ({
                        sectionCode: a.sectionCode,
                        areaStatus: a.areaStatus
                    }));
                    // 发事件给 userscript
                    window.dispatchEvent(new CustomEvent('areaDataReady', { detail: areaArray }));
                } catch (e) {
                    console.error('Hook: 解析 get-area-map JSON 失败', e);
                }
            }
            return resp;
        };

        // 绑到 XMLHttpRequest
        const origSend = XMLHttpRequest.prototype.send;
        XMLHttpRequest.prototype.send = function(body) {
            this.addEventListener('load', () => {
                if (this.responseURL.includes('/ticket/get-area-map/')) {
                    try {
                        const json = JSON.parse(this.responseText);
                        const areaArray = Object.values(json).map(a => ({
                            sectionCode: a.sectionCode,
                            areaStatus: a.areaStatus
                        }));
                        window.dispatchEvent(new CustomEvent('areaDataReady', { detail: areaArray }));
                    } catch (e) {
                        console.error('Hook: 解析 XHR get-area-map 失败', e);
                    }
                }
            });
            return origSend.call(this, body);
        };
    };

    // 把上面函数注入到页面
    const script = document.createElement('script');
    script.textContent = `(${pageHook.toString()})();`;
    document.documentElement.appendChild(script);
    script.remove();


    // ─── 2) userscript 本身的逻辑 ─────────────────────

    let dataProcessedOnce = false;
    let randomFallbackTriggered = false;

    // 收到页面上下文的区域数据后触发
    window.addEventListener('areaDataReady', e => {
        process_available_areas(e.detail);
    });

    function process_available_areas(areaData) {
        if (dataProcessedOnce) return;
        console.log("开始处理区域数据：", areaData);
        let found = false;

        for (const subList of want_section) {
            const matched = [];
            const available = [];
            for (const code of subList) {
                const info = areaData.find(a => a.sectionCode === code);
                if (info) {
                    matched.push(code);
                    if (info.areaStatus === 'AVAILABLE') available.push(code);
                }
            }
            if (matched.length > 0 && available.length >= matched.length / 2) {
                const pick = available[Math.floor(Math.random() * available.length)];
                console.log(`子列表 [${subList}] 符合条件，选中 ${pick}`);
                click_section(pick);
                found = true;
                break;
            }
        }

        if (!found && !randomFallbackTriggered) {
            randomFallbackTriggered = true;
            console.log("未找到理想区域，走随机备援…");
            wait_for_sections_then_click();
        }
        dataProcessedOnce = true;
    }

    function wait_for_sections_then_click() {
        const iv = setInterval(() => {
            const all = Array.from(document.querySelectorAll('g[id^="field_"]'));
            if (all.length === 0) return;
            clearInterval(iv);
            const nonEmpty = all.filter(s => !s.classList.contains('empty'));
            if (nonEmpty.length === 0) {
                console.log("所有 section 都 empty，刷新页面");
                setTimeout(() => location.reload(), 5000);
                return;
            }
            const pick = nonEmpty[Math.floor(Math.random() * nonEmpty.length)].id;
            console.log("随机备援挑到：", pick);
            setTimeout(() => click_section(pick), 500);
        }, 1000);
    }

    function section_click(sel) {
        const el = document.querySelector(sel);
        if (!el) return false;
        el.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));
        return true;
    }

    function click_section(field) {
        const sel1 = `#${field}>g:nth-of-type(1)>polygon`;
        const sel2 = `#${field}>g:nth-of-type(1)>path`;
        let attempts = 0, timer = setInterval(() => {
            attempts++;
            if (document.querySelector(sel1)) {
                clearInterval(timer);
                section_click(sel1);
                ticket_price_loop();
            } else if (document.querySelector(sel2)) {
                clearInterval(timer);
                section_click(sel2);
                ticket_price_loop();
            } else if (attempts >= 20) {
                clearInterval(timer);
                console.warn(`点击 ${field} 超时`);
            }
        }, 500);
    }

    function ticket_price_loop() {
        const iv = setInterval(() => {
            const sel = document.querySelector('.w100.form-select');
            if (!sel) return;
            clearInterval(iv);
            sel.selectedIndex = sel.options.length - 1;
            const btn = document.getElementById('autoMode');
            if (btn) btn.click();
        }, 1000);
    }

    function remove_adblock_loop() {
        const iv = setInterval(() => {
            let removed = false;
            const m = document.querySelector('div.modal-backdrop.fade.show');
            const a = document.getElementById('adblockModal');
            if (m) { m.remove(); removed = true; }
            if (a) { a.remove(); removed = true; }
            if (removed && !document.querySelector('div.modal-backdrop.fade.show') && !document.getElementById('adblockModal')) {
                clearInterval(iv);
            }
        }, 1000);
    }

    function promo_code() {
        const msg = document.querySelector('div.text-bold');
        if (msg && msg.textContent.includes('successfully applied')) return;
        const inp = document.getElementById('checkCode');
        const btn = document.querySelector('.check-discount');
        if (inp && btn) {
            inp.value = promo_code_number;
            btn.click();
        }
    }

    function refresh() { location.reload(); }

    window.addEventListener('load', () => {
        console.log('A 页面加载完成，启用后台流程');
        remove_adblock_loop();
        promo_code();
        setTimeout(refresh, 8000);
    });
})();
